const sourceHeaders = {
    "Relationship_Key_Number": "id",
    "Data_Source_Name_Left": "leftDatasource",
    "Source_Left_Entity": "leftSourceEntity",
    "Left_Entity_Alias_Name": "leftSourceEntityAlias",
    "Source_Left_Entity_Extraction_Bundle": "sourceLeftEntityExtractionBundle",
    "Left_Alias_Type_Of_Data_Store": "leftAliasTypeOfDataStore",
    "Left_Attribute": "leftSourceAttribute",
    "Left_Filter_Transformation_Rule_Language": "leftFilterTransformationRuleLanguage",
    "Left_Filter_Transformation_Rule": "leftFilterTransformationRule",
    "Alias_Relationship_Type_Language": "aliasRelationshipTypeLanguage",
    "Alias_Relationship_Type": "aliasRelationshipType",
    "Alias_Attribute_Relationship_Filter_Condition_Language": "aliasAttributeRelationshipFilterConditionLanguage",
    "Alias_Attribute_Relationship_Filter_Condition": "aliasAttributeRelationshipFilterCondition",
    "Join_Method_Language": "joinMethodLanguage",
    "Join_Method": "joinMethod",
    "Data_Source_Name_Right": "rightDatasource",
    "Source_Right_Entity": "rightSourceEntity",
    "Right_Entity_Alias_Name": "rightSourceEntityAlias",
    "Source_Right_Entity_Extraction_Bundle": "sourceRightEntityExtractionBundle",
    "Right_Alias_Type_Of_Data_Store": "rightAliasTypeOfDataStore",
    "Right_Attribute": "rightSourceAttribute",
    "Right_Filter_Transformation_Rule_Language": "rightFilterTransformationRuleLanguage",
    "Right_Filter_Transformation_Rule": "rightFilterTransformationRule",
    "Target_Temp_Output_Number": "targetTempOutputNumber",
    "Relationship_Type": "relationshipType",
    "Left_To_Right_Set_Information": "leftToRightSetInformation",
    "Target_Temp_Type_Of_Data_Store": "targetTempTypeOfDataStore",
    "Target_Datasource_Name": "targetDatasourceName",
    "Target_Name": "targetName",
    "Load_Option": "loadOption",
    "Order_By": "orderBy",
    "Parallel_Bundles_Extraction_Priority": "parallelBundlesExtractionPriority",
    "Parallel_Bundles_Transformation": "parallelBundlesTransformation",
    "Parallel_Bundles_Load": "parallelBundlesLoad",
    "Parallel_Bundles_Load_Priority": "parallelBundlesLoadPriority",
};

export default sourceHeaders;